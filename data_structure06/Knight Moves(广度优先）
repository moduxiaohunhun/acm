WA：绝望+10000，运行结果不正确，debug后发现第二个while，出来的时候居然不满足判断条件。。。。。。
#include <iostream>
#include <string>
#include <sstream>
#include <algorithm>
#include <cstdio>
#include <cstring>
#include <queue>
using namespace std;
int main()
{
    char cx1,cx2;
    int x1,y1,x2,y2;
    int sum;
    int step;
    while(cin>>cx1>>y1>>cx2>>y2)
    {
        sum=0;
        step=0;
        x1=cx1-'a',x2=cx2-'a';
        y1--,y2--;
        queue <pair<int,int> > q1;
        pair<int,int> poem;
        pair<int,int> poem2;
        poem.first=x1;
        poem.second=y1;
        q1.push(poem);
        sum=q1.size();
        poem=q1.front();
        while(poem.first!=x2&&poem.second!=y2)
        {
            if(poem.first-2>=0&&poem.second+1<=7)
            {
                poem2.first=poem.first-2;
                poem2.second=poem.second+1;
                q1.push(poem2);
            }
            if(poem.first-1>=0&&poem.second+2<=7)
            {
                poem2.first=poem.first-1;
                poem2.second=poem.second+2;
                q1.push(poem2);
            }
            if(poem.first+2<=7&&poem.second+1<=7)
            {
                poem2.first=poem.first+2;
                poem2.second=poem.second+1;
                q1.push(poem2);
            }
            if(poem.first+1<=7&&poem.second+2<=7)
            {
                poem2.first=poem.first+1;
                poem2.second=poem.second+2;
                q1.push(poem2);
            }
            if(poem.first-1>=0&&poem.second-2>=0)
            {
                poem2.first=poem.first-1;
                poem2.second=poem.second-2;
                q1.push(poem2);
            }
            if(poem.first-2>=0&&poem.second-1>=0)
            {
                poem2.first=poem.first-2;
                poem2.second=poem.second-1;
                q1.push(poem2);
            }
            if(poem.first+1<=7&&poem.second-2>=0)
            {
                poem2.first=poem.first+1;
                poem2.second=poem.second-2;
                q1.push(poem2);
            }
            if(poem.first+2<=7&&poem.second-1>=0)
            {
                poem2.first=poem.first+2;
                poem2.second=poem.second-1;
                q1.push(poem2);
            }
            q1.pop();
            sum--;
            if(sum==0)
            {
                step++;
                sum=q1.size();
            }
            poem=q1.front();
        }
        cout<<step<<endl;
    }
    return 0;
}


AC源码；bfs,queue,struct
#include <iostream>
#include <cstdio>
#include <queue>
#include <cstring>
#include <string>
using namespace std;
int area[10][10];
int direction[8][2]={{1,-2},{2,-1},{2,1},{1,2},{-1,2},{-2,1},{-2,-1},{-1,-2}};
struct node
{
    int x;
    int y;
    int step;
};

int main()
{
   int endx,endy;
   char start[3],end[3];
   while(~scanf("%s%s",start,end))
   {
       memset(area,0,sizeof(area));
       endx=end[0]-'a';
       endy=end[1]-'1';
       struct node n;
       n.x=start[0]-'a';
       n.y=start[1]-'1';
       n.step=0;
       area[n.x][n.y]=0;
       queue <node> q;
       q.push(n);
       while(!q.empty())
       {
           node n=q.front();
           q.pop();
           if(n.x==endx&&n.y==endy)
           {
               printf("To get from %s to %s takes %d knight moves.\n",start,end,n.step);
               break;
           }
          for(int i=0;i<8;i++)
          {
              struct node secondn;
              secondn.x=n.x+direction[i][0];
              secondn.y=n.y+direction[i][1];
              if(secondn.x<0||secondn.y>=8||secondn.x>=8||secondn.y<0||area[secondn.x][secondn.y]!=0)
              {
                  continue;
              }
              else
              {
                  secondn.step=n.step+1;
                  area[secondn.x][secondn.y]=secondn.step;
                  q.push(secondn);
              }
          }
       }
       while(q.empty())
       {
           q.pop();
       }
   }
    return 0;
}

